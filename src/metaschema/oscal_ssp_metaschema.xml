<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../build/metaschema/toolchains/xslt-M4/validate/metaschema-check.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<!-- ** NOTES **
- Need to check latest FR SSP template for "Privacy Impact Designation".
  Was it dropped in latest template, or is it missing from schema?
-->
<!-- OSCAL Implementation Layer: System Security Plan (SSP) METASCHEMA -->
<!-- validate with XSD and Schematron (linked) -->
<!-- TODO: Need to update this model based on the changes that @brianrufgsa is making to support leveraged authorizations. -->
<!DOCTYPE METASCHEMA [
   <!ENTITY allowed-values-responsible-roles-system SYSTEM "shared-constraints/allowed-values-responsible-roles-system.ent">
   <!ENTITY allowed-values-responsible-roles-operations SYSTEM "shared-constraints/allowed-values-responsible-roles-operations.ent">
   <!ENTITY allowed-values-responsible-roles-component-production SYSTEM "shared-constraints/allowed-values-responsible-roles-component-production.ent">
]>
<METASCHEMA xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://csrc.nist.gov/ns/oscal/metaschema/1.0"
            xsi:schemaLocation="http://csrc.nist.gov/ns/oscal/metaschema/1.0 ../../build/metaschema/toolchains/xslt-M4/validate/metaschema.xsd">
   <schema-name>OSCAL System Security Plan (SSP) Format</schema-name>
   <schema-version>1.0.0-milestone3</schema-version>
   <short-name>oscal-ssp</short-name>
   <namespace>http://csrc.nist.gov/ns/oscal/1.0</namespace>
   <remarks>
      <p>The OSCAL Control SSP format can be used to describe the information typically specified in a system security plan, such as those defined in NIST SP 800-18.</p>
      <p>The root of the OSCAL System Security Plan (SSP) format is <code>system-security-plan</code>.</p>
   </remarks>

   <import href="oscal_metadata_metaschema.xml"/>
   <import href="oscal_implementation-common_metaschema.xml"/>

   <!-- ############################################## -->
   <!-- # The SSP Assembly and supporting constructs # -->
   <!-- ############################################## -->
   <define-assembly name="system-security-plan">
      <formal-name>System Security Plan (SSP)</formal-name>
      <description>A system security plan, such as those described in NIST SP 800-18</description>
      <root-name>system-security-plan</root-name>
      <define-flag name="uuid" as-type="uuid" required="yes">
         <formal-name>System Security Plan Universally Unique Identifier</formal-name>
         <description>A globally unique identifier for this catalog instance. This UUID should be changed when this document is revised.</description>
      </define-flag>
      <model>
         <assembly ref="metadata" min-occurs="1"/>
         <assembly ref="import-profile" min-occurs="1"/>
         <assembly ref="system-characteristics" min-occurs="1"/>
         <assembly ref="system-implementation" min-occurs="1"/>
         <assembly ref="control-implementation" min-occurs="1"/>
         <assembly ref="back-matter"/>
      </model>
   </define-assembly>

   <!-- ######################################################### -->
   <!-- # The Import Profile Assembly and supporting constructs # -->
   <!-- ######################################################### -->
   <define-assembly name="import-profile">
      <formal-name>Import Profile</formal-name>
      <description>Used to import the OSCAL profile representing the system's control baseline.</description>
      <define-flag name="href" as-type="uri-reference" required="yes">
         <formal-name>Profile Reference</formal-name>
         <description>A resolvable URL reference to the profile to use as the system's control baseline.</description>
         <remarks>
            <p>The value of the <code>href</code> can be an internet resource, or a local reference using a fragment e.g. #fragment that points to a <code>back-matter</code> <code>resource</code> in the same document.</p>
            <!-- TODO: Add a link to "within the scope of the containing OSCAL document" to point to documentation of identification scopes" -->
            <p>If a local reference using a fragment is used, this will be indicated by a fragment "#" followed by an identifier which references an identified <code>resource</code> in the document's <code>back-matter</code> or another object that is within the scope of the containing OSCAL document.</p>
            <p>If an internet resource is used, the <code>href</code> value will be an absolute or relative URI pointing to the location of the referenced resource. A relative URI will be resolved relative to the location of the document containing the link.</p>
         </remarks>
      </define-flag>
      <model>
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
   </define-assembly>

   <!-- ################################################################# -->
   <!-- # The System Characteristics Assembly and supporting constructs # -->
   <!-- ################################################################# -->
   <define-assembly name="system-characteristics">
      <formal-name>System Characteristics</formal-name>
      <description>Contains the characteristics of the system, such as its name, purpose, and security impact level.</description>
      <model>
         <define-field name="system-id" as-type="string" min-occurs="1" max-occurs="unbounded">
            <formal-name>System Identification</formal-name>
            <description>A unique identifier for the system described by this system security plan.</description>
            <json-value-key>id</json-value-key>
            <group-as name="system-ids" in-json="ARRAY"/>
            <define-flag name="identifier-type" as-type="uri">
               <formal-name>Identification System Type</formal-name>
               <description>Identifies the identification system from which the provided identifier was assigned.</description>
               <constraint>
                  <allowed-values allow-other="yes">
                     <enum value="https://fedramp.gov">The identifier was assigned by FedRAMP.</enum>
                     <enum value="https://ietf.org/rfc/rfc4122">A Universally Unique IDentifier (UUID) as defined by RFC4122.</enum>
                  </allowed-values>
               </constraint>
            </define-flag>
         </define-field>
         <define-field name="system-name" as-type="string" min-occurs="1">
            <formal-name>System Name - Full</formal-name>
            <description>The full name of the system.</description>
         </define-field>
         <define-field name="system-name-short" as-type="string">
            <formal-name>System Name - Short</formal-name>
            <description>A short name for the system, such as an acronym, that is suitable for display in a data table or summary list.</description>
         </define-field>
         <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
            <formal-name>System Description</formal-name>
            <description>A summary of the system.</description>
         </define-field>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
         </assembly>
         <field ref="date-authorized"/>
         <define-field name="security-sensitivity-level" min-occurs="1">
            <formal-name>Security Sensitivity Level</formal-name>
            <description>The overall information system sensitivity categorization, such as defined by <a href="https://doi.org/10.6028/NIST.FIPS.199">FIPS-199</a>.</description>
            <remarks>
               <p>Often, organizations require the security sensitivity level to correspond with the highest confidentiality, integrity, or availability level identified by <code>security-impact-level</code>.</p>
            </remarks>
         </define-field>
         <assembly ref="system-information" min-occurs="1"/>
         <assembly ref="security-impact-level" min-occurs="1"/>
         <assembly ref="status" min-occurs="1"/>
         <assembly ref="authorization-boundary" min-occurs="1"/>
         <assembly ref="network-architecture"/>
         <assembly ref="data-flow"/>
         <assembly ref="responsible-party" max-occurs="unbounded">
            <group-as name="responsible-parties" in-json="BY_KEY"/>
         </assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
      <constraint>
         <allowed-values target="property/@name" allow-other="yes">
            <enum value="identity-assurance-level">A value of 1, 2, or 3 as defined by <a href="https://doi.org/10.6028/NIST.SP.800-63-3">SP 800-63-3</a>.</enum>
            <enum value="authenticator-assurance-level">A value of 1, 2, or 3 as defined by <a href="https://doi.org/10.6028/NIST.SP.800-63-3">SP 800-63-3</a>.</enum>
            <enum value="federation-assurance-level">A value of 1, 2, or 3 as defined by <a href="https://doi.org/10.6028/NIST.SP.800-63-3">SP 800-63-3</a>.</enum>
         </allowed-values>
         <allowed-values target="property[@name=('identity-assurance-level','authenticator-assurance-level','federation-assurance-level')]/value()">
            <enum value="1">As defined by <a href="https://doi.org/10.6028/NIST.SP.800-63-3">SP 800-63-3</a>.</enum>
            <enum value="2">As defined by <a href="https://doi.org/10.6028/NIST.SP.800-63-3">SP 800-63-3</a>.</enum>
            <enum value="3">As defined by <a href="https://doi.org/10.6028/NIST.SP.800-63-3">SP 800-63-3</a>.</enum>
         </allowed-values>
         <allowed-values target="annotation/@name" allow-other="yes">
            <enum value="cloud-deployment-model">The associated value is one of: public-cloud, private-cloud, community-cloud, government-only-cloud, hybrid-cloud, or other.</enum>
            <enum value="cloud-service-model">The associated value is one of: saas, paas, iaas, or other.</enum>
         </allowed-values>
         <allowed-values target="property[@name='cloud-deployment-model']/value()">
            <enum value="public-cloud">The public cloud deployment model as defined by <a href="https://doi.org/10.6028/NIST.SP.800-145">The NIST Definition of Cloud Computing</a>.</enum>
            <enum value="private-cloud">The private cloud deployment model as defined by <a href="https://doi.org/10.6028/NIST.SP.800-145">The NIST Definition of Cloud Computing</a>.</enum>
            <enum value="community-cloud">The community cloud deployment model as defined by <a href="https://doi.org/10.6028/NIST.SP.800-145">The NIST Definition of Cloud Computing</a>.</enum>
            <!-- TODO: consider generalizing this in a way that applies to other usage contexts. -->
            <enum value="government-only-cloud">TODO: define</enum>
            <enum value="other">Any other type of cloud deployment model that is exclusive to the other choices.</enum>
            <remarks>
               <p>The hybrid cloud deployment model, as defined by <a href="https://doi.org/10.6028/NIST.SP.800-145">The NIST Definition of Cloud Computing</a>, can be supported by selecting two or more of the existing deployment models.</p>
            </remarks>
         </allowed-values>
         <allowed-values target="property[@name='cloud-service-model']/value()">
            <!-- QUESTION: Change case? -->
            <enum value="saas">Software as a service (SaaS) cloud service model as defined by <a href="https://doi.org/10.6028/NIST.SP.800-145">The NIST Definition of Cloud Computing</a>.</enum>
            <enum value="paas">Platform as a service (PaaS) cloud service model as defined by <a href="https://doi.org/10.6028/NIST.SP.800-145">The NIST Definition of Cloud Computing</a>.</enum>
            <enum value="iaas">Infrastructure as a service (IaaS) cloud service model as defined by <a href="https://doi.org/10.6028/NIST.SP.800-145">The NIST Definition of Cloud Computing</a>.</enum>
            <enum value="other">Any other type of cloud service model that is exclusive to the other choices.</enum>
         </allowed-values>
         <allowed-values target="responsible-party/@role-id" allow-other="yes">
            &allowed-values-responsible-roles-system;
         </allowed-values>
      </constraint>
   </define-assembly>
   <define-assembly name="system-information">
      <formal-name>System Information</formal-name>
      <description>Contains details about all information types that are stored, processed, or transmitted by the system, such as privacy information, and those defined in <a href="https://doi.org/10.6028/NIST.SP.800-60v2r1">NIST SP 800-60</a>.</description>
      <model>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
            <!-- TODO: Model other specific names? -->
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
         </assembly>
         <define-assembly name="information-type" min-occurs="1" max-occurs="unbounded">
            <formal-name>Information Type</formal-name>
            <description>Contains details about one information type that is stored, processed, or transmitted by the system, such as privacy information, and those defined in <a href="https://doi.org/10.6028/NIST.SP.800-60v2r1">NIST SP 800-60</a>.</description>
            <group-as name="information-types" in-json="ARRAY"/>
            <define-flag name="uuid" as-type="uuid">
               <formal-name>Information Type Universally Unique Identifier</formal-name>
               <description>A globally unique identifier that can be used to reference this information type entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
            </define-flag>
            <model>
               <define-field name="title" as-type="markup-line" min-occurs="1">
                  <formal-name>title field</formal-name>
                  <description>A human readable name for the information type. This title should be meaningful within the context of the system.</description>
               </define-field>
               <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
                  <formal-name>Information Type Description</formal-name>
                  <description>A summary of how this information type is used within the system.</description>
               </define-field>
               <define-field name="information-type-id" as-type="string" max-occurs="unbounded">
                  <formal-name>Information Type Identifier</formal-name>
                  <description>An identifier qualified by the given identification <code>system</code> used, such as NIST SP 800-60.</description>
                  <json-key flag-name="system"/>
                  <json-value-key>id</json-value-key>
                  <group-as name="information-type-ids" in-json="BY_KEY"/>
                  <define-flag required="yes" name="system">
                     <formal-name>Information Type Identification System</formal-name>
                     <description>Specifies the information type identification system used.</description>
                     <constraint>
                        <allowed-values allow-other="yes">
                           <enum value="https://doi.org/10.6028/NIST.SP.800-60v2r1">Based on the section identifiers in NIST Special Publication 800-60 Volume II Revision 1</enum>
                        </allowed-values>
                     </constraint>
                  </define-flag>
                  <remarks>
                     <p>The current allowed values are based on those identified in <a href="https://doi.org/10.6028/NIST.SP.800-60v2r1">NIST SP 800-60 Volume 2</a>
                     </p>
                  </remarks>
               </define-field>
               <field ref="property" max-occurs="unbounded">
                  <use-name>prop</use-name>
                  <group-as name="properties" in-json="ARRAY"/>
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
               </assembly>
               <define-assembly name="confidentiality-impact" min-occurs="1">
                  <formal-name>Confidentiality Impact Level</formal-name>
                  <description>The expected level of impact resulting from the unauthorized disclosure of information.</description>
                  <model>
                     <field ref="property" max-occurs="unbounded">
                        <use-name>prop</use-name>
                        <group-as name="properties" in-json="ARRAY"/>
                     </field>
                     <assembly ref="annotation" max-occurs="unbounded">
                        <group-as name="annotations" in-json="ARRAY"/>
                     </assembly>
                     <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                     </assembly>
                     <field ref="base" min-occurs="1"/>
                     <field ref="selected"/>
                     <field ref="adjustment-justification" in-xml="WITH_WRAPPER"/>
                  </model>
               </define-assembly>
               <define-assembly name="integrity-impact" min-occurs="1">
                  <formal-name>Integrity Impact Level</formal-name>
                  <description>The expected level of impact resulting from the unauthorized modification of information.</description>
                  <model>
                     <field ref="property" max-occurs="unbounded">
                        <use-name>prop</use-name>
                        <group-as name="properties" in-json="ARRAY"/>
                     </field>
                     <assembly ref="annotation" max-occurs="unbounded">
                        <group-as name="annotations" in-json="ARRAY"/>
                     </assembly>
                     <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                     </assembly>
                     <field ref="base" min-occurs="1"/>
                     <field ref="selected"/>
                     <field ref="adjustment-justification" in-xml="WITH_WRAPPER"/>
                  </model>
               </define-assembly>
               <define-assembly name="availability-impact" min-occurs="1">
                  <formal-name>Availability Impact Level</formal-name>
                  <description>The expected level of impact resulting from the disruption of access to or use of information or the information system.</description>
                  <model>
                     <field ref="property" max-occurs="unbounded">
                        <use-name>prop</use-name>
                        <group-as name="properties" in-json="ARRAY"/>
                     </field>
                     <assembly ref="annotation" max-occurs="unbounded">
                        <group-as name="annotations" in-json="ARRAY"/>
                     </assembly>
                     <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                     </assembly>
                     <field ref="base" min-occurs="1"/>
                     <field ref="selected"/>
                     <field ref="adjustment-justification" in-xml="WITH_WRAPPER"/>
                  </model>
               </define-assembly>
            </model>
         </define-assembly>
      </model>
      <constraint>
         <allowed-values target="property/@name" allow-other="yes">
            <enum value="privacy-designation">Is this a privacy sensitive system? yes or no</enum>
         </allowed-values>
         <allowed-values target="property[@name='privacy-designation']/value()">
            <enum value="yes">The system is privacy sensitive.</enum>
            <enum value="no">The system isnot privacy sensitive.</enum>
         </allowed-values>
         <allowed-values target="link/@rel">
            <enum value="privacy-impact-assessment">A link to the privacy impact assessment.</enum>
         </allowed-values>
         <matches target="link[@rel='privacy-impact-assessment']/@href[starts-with(.,'#')]" datatype="uri-reference"/>
         <index-has-key name="index-back-matter-resource" target="link[@rel='privacy-impact-assessment' and [starts-with(@href,'#')]]">
            <key-field target="@href" pattern="#(.*)"/>
         </index-has-key>
         <matches target="link[@rel='privacy-impact-assessment']/@href[not(starts-with(.,'#'))]" datatype="uri"/>
         <allowed-values target="security-sensitivity-level|security-impact-level/(security-objective-confidentiality|security-objective-integrity|security-objective-availability)|system-information/information-type/(confidentiality-impact|integrity-impact|availability-impact)/(base|selected}">
            <enum value="fips-199-low">A 'low' sensitivity level as defined in <a href="https://doi.org/10.6028/NIST.FIPS.199">FIPS-199</a>.</enum>
            <enum value="fips-199-moderate">A 'moderate' sensitivity level as defined in <a href="https://doi.org/10.6028/NIST.FIPS.199">FIPS-199</a>.</enum>
            <enum value="fips-199-high">A 'high' sensitivity level as defined in <a href="https://doi.org/10.6028/NIST.FIPS.199">FIPS-199</a>.</enum>
            <remarks>
               <p>FIPS-199 taxonomy is provided here as a starting point. We will provide other taxonomies based on community requests.</p>
            </remarks>
         </allowed-values>
      </constraint>
   </define-assembly>
   <define-field name="base" as-type="string" scope="local">
      <formal-name>Base Level (Confidentiality, Integrity, or Availability)</formal-name>
      <description>The prescribed base (Confidentiality, Integrity, or Availability) security impact level.</description>
   </define-field>
   <define-field name="selected" as-type="string" scope="local">
      <formal-name>Selected Level (Confidentiality, Integrity, or Availability)</formal-name>
      <description>The selected (Confidentiality, Integrity, or Availability) security impact level.</description>
   </define-field>
   <define-field name="adjustment-justification" as-type="markup-multiline" scope="local">
      <formal-name>Adjustment Justification</formal-name>
      <description>If the selected security level is different from the base security level, this contains the justification for the change.</description>
   </define-field>
   <define-assembly name="security-impact-level">
      <formal-name>Security Impact Level</formal-name>
      <description>The overall level of expected impact resulting from unauthorized disclosure, modification, or loss of access to information.</description>
      <model>
         <define-field name="security-objective-confidentiality" as-type="string" min-occurs="1">
            <!-- CHANGED: cardinality to min 1 -->
            <formal-name>Security Objective: Confidentiality</formal-name>
            <description>A target-level of confidentiality for the system, based on the sensitivity of information within the system.</description>
         </define-field>
         <define-field name="security-objective-integrity" as-type="string" min-occurs="1">
            <!-- CHANGED: cardinality to min 1 -->
            <formal-name>Security Objective: Integrity</formal-name>
            <description>A target-level of integrity for the system, based on the sensitivity of information within the system.</description>
         </define-field>
         <define-field name="security-objective-availability" as-type="string" min-occurs="1">
            <!-- CHANGED: cardinality to min 1 -->
            <formal-name>Security Objective: Availability</formal-name>
            <description>A target-level of availability for the system, based on the sensitivity of information within the system.</description>
         </define-field>
      </model>
   </define-assembly>
   <define-assembly name="status">
      <formal-name>Status</formal-name>
      <description>Describes the operational status of the system.</description>
      <define-flag name="state" required="yes" as-type="string">
         <formal-name>State</formal-name>
         <description>The current operating status.</description>
         <constraint>
            <allowed-values>
               <enum value="operational">The system is currently operating in production.</enum>
               <enum value="under-development">The system is being designed, developed, or implemented</enum>
               <enum value="under-major-modification">The system is undergoing a major change, development, or transition.</enum>
               <enum value="disposition">The system is no longer operational.</enum>
               <enum value="other">Some other state.</enum>
            </allowed-values>
         </constraint>
      </define-flag>
      <model>
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
      <remarks>
         <p>If 'other' is selected, a remark must be included to describe the current state.</p>
      </remarks>
   </define-assembly>
   <define-field name="date-authorized" as-type="date" scope="local">
      <formal-name>System Authorization Date</formal-name>
      <description>The date the system received its authorization.</description>
   </define-field>
   <define-assembly name="authorization-boundary">
      <formal-name>Authorization Boundary</formal-name>
      <description>A description of this system's authorization boundary, optionally supplemented by diagrams that illustrate the authorization boundary.</description>
      <model>
         <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
            <formal-name>Authorization Boundary Description</formal-name>
            <description>A summary of the system's authorization boundary.</description>
         </define-field>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
            <!-- TODO: Model specific link relationships? -->
         </assembly>
         <assembly ref="diagram" max-occurs="unbounded">
            <group-as name="diagrams" in-json="BY_KEY"/>
            <remarks>
               <p>A visual depiction of the system's authorization boundary.</p>
            </remarks>
         </assembly>
         <define-field name="remarks" as-type="markup-multiline" in-xml="WITH_WRAPPER">
            <formal-name>remarks field</formal-name>
            <description>Commentary about the system's authorization boundary that enhances the diagram.</description>
         </define-field>
      </model>
   </define-assembly>
   <define-assembly name="diagram">
      <formal-name>Diagram</formal-name>
      <description>A graphic that provides a visual representation the system, or some aspect of it.</description>
      <json-key flag-name="uuid"/>
      <define-flag required="yes" name="uuid">
         <formal-name>Diagram ID</formal-name>
         <description>The identifier for this diagram.</description>
      </define-flag>
      <model>
         <define-field name="description" as-type="markup-multiline" in-xml="WITH_WRAPPER">
            <formal-name>Diagram Description</formal-name>
            <description>A summary of the diagram.</description>
            <remarks>
               <p>This description is intended to be used as alternate text to support compliance with requirements from <a href="https://www.section508.gov/manage/laws-and-policies">Section 508 of the United States Workforce Rehabilitation Act of 1973</a>.</p>
            </remarks>
         </define-field>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </field>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
         </assembly>
         <define-field name="caption" as-type="markup-line">
            <formal-name>Caption</formal-name>
            <description>A brief caption to annotate the diagram.</description>
         </define-field>
         <define-field name="remarks" as-type="markup-multiline" in-xml="WITH_WRAPPER">
            <formal-name>remarks field</formal-name>
            <description>Commentary about the diagram that enhances it.</description>
         </define-field>
      </model>
      <constraint>
         <allowed-values target="link/@rel">
            <enum value="diagram">A reference to the diagram image.</enum>
         </allowed-values>
         <matches target="link[@rel='diagramn']/@href[starts-with(.,'#')]" datatype="uri-reference"/>
         <index-has-key name="index-back-matter-resource" target="link[@rel='diagram' and [starts-with(@href,'#')]]">
            <key-field target="@href" pattern="#(.*)"/>
         </index-has-key>
         <matches target="link[@rel='diagram']/@href[not(starts-with(.,'#'))]" datatype="uri"/>
      </constraint>
      <remarks>
         <p>A diagram must include a <code>link</code> with a rel value of "diagram", who's href references a remote URI or an internal reference within this document containing the diagram.</p>
      </remarks>
      <example>
         <remarks>
            <p>The internal reference "#diagram1" points to an attached resource defined in the <code>back-matter</code> as a <code>resource</code>. The <code>media-type</code> indicates that the image is a Portable Network Graphics (PNG) image.</p>
         </remarks>
         <o:diagram xmlns:o="http://csrc.nist.gov/ns/oscal/example" id="boundary-diagram-1">
            <o:description>A boundary diagram.</o:description>
            <o:link rel="diagram" href="#diagram1" media-type="image/png"/>
         </o:diagram>
      </example>
   </define-assembly>
   <define-assembly name="network-architecture">
      <formal-name>Network Architecture</formal-name>
      <description>A description of the system's network architecture, optionally supplemented by diagrams that illustrate the network architecture.</description>
      <model>
         <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
            <formal-name>Network Architecture Description</formal-name>
            <description>A summary of the system's network architecture.</description>
         </define-field>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
            <!-- TODO: Model specific link relationships? -->
         </assembly>
         <assembly ref="diagram" max-occurs="unbounded">
            <group-as name="diagrams" in-json="BY_KEY"/>
         </assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
   </define-assembly>
   <define-assembly name="data-flow">
      <formal-name>Data Flow</formal-name>
      <description>A description of the logical flow of information within the system and across its boundaries, optionally supplemented by diagrams that illustrate these flows.</description>
      <model>
         <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
            <formal-name>Data Flow Description</formal-name>
            <description>A summary of the system's data flow.</description>
         </define-field>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
            <!-- TODO: Model specific link relationships? -->
         </assembly>
         <assembly ref="diagram" max-occurs="unbounded">
            <group-as name="diagrams" in-json="BY_KEY"/>
         </assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
   </define-assembly>
   
   <!-- ################################################################ -->
   <!-- # The System Implementation Assembly and supporting constructs # -->
   <!-- ################################################################ -->
   <define-assembly name="system-implementation">
      <formal-name>System Implementation</formal-name>
      <description>Provides information as to how the system is implemented.</description>
      <model>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
            <!-- TODO: Model specific names? -->
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
            <!-- TODO: Model specific link relationships? -->
         </assembly>
         <define-assembly name="leveraged-authorization" max-occurs="unbounded">
            <formal-name>Leveraged Authorization</formal-name>
            <description>A description of another authorized system from which this system inherits capabilities that satisfy security requirements. Another term for this concept is a <em>common control provider</em>.</description>
            <group-as name="leveraged-authorizations" in-json="ARRAY"/>
            <define-flag name="uuid" as-type="uuid" required="yes">
               <formal-name>Leveraged Authorization Universally Unique Identifier</formal-name>
               <description>A globally unique identifier that can be used to reference this leveraged authorization entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
            </define-flag>
            <model>
               <define-field name="title" as-type="markup-line" min-occurs="1">
                  <formal-name>title field</formal-name>
                  <description>A human readable name for the leveraged authorization in the context of the system.</description>
               </define-field>
               <field ref="property" max-occurs="unbounded">
                  <use-name>prop</use-name>
                  <group-as name="properties" in-json="ARRAY"/>
                  <!-- TODO: Model specific names? -->
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
                  <!-- TODO: Model specific names? -->
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
               </assembly>
               <define-field name="party-uuid" as-type="uuid" min-occurs="1">
                  <formal-name>party-uuid field</formal-name>
                  <description>A reference to the party that manages the leveraged system.</description>
               </define-field>
               <field ref="date-authorized" min-occurs="1"/>
               <field ref="remarks" in-xml="WITH_WRAPPER"/>
            </model>
            <constraint>
               <allowed-values target="link/@rel">
                  <enum value="system-security-plan">A reference to the system security plan for the leveraged authorization.</enum>
               </allowed-values>
               <matches target="link[@rel='system-security-plan']/@href[starts-with(.,'#')]" datatype="uri-reference"/>
               <index-has-key name="index-back-matter-resource" target="link[@rel='system-security-plan' and [starts-with(@href,'#')]]">
                  <key-field target="@href" pattern="#(.*)"/>
               </index-has-key>
               <matches target="link[@rel='system-security-plan']/@href[not(starts-with(.,'#'))]" datatype="uri"/>
            </constraint>
         </define-assembly>
         
         <assembly ref="system-user" min-occurs="1" max-occurs="unbounded">
            <use-name>user</use-name>
            <group-as name="users" in-json="BY_KEY"/>
         </assembly>
         <assembly ref="system-component" max-occurs="unbounded">
            <use-name>component</use-name>
            <group-as name="components" in-json="BY_KEY"/>
         </assembly>
         <!--         <assembly ref="capability" max-occurs="unbounded">
            <group-as name="capabilities" in-json="BY_KEY"/>
         </assembly>
         -->
         <assembly ref="system-inventory"/>
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
      <constraint>
         <index name="index-system-implementation-leveraged-authorization-uuid" target="leveraged-authorization">
            <key-field target="@uuid"/>
         </index>
         <index-has-key name="index-system-implementation-leveraged-authorization-uuid" target="component/prop[@name='leveraged-authorization-uuid']">
            <key-field target="value()"/>
         </index-has-key>

         <!-- References to components -->
         <index name="index-system-implementation-component-uuid" target="component">
            <key-field target="@uuid"/>
         </index>
         <index-has-key name="index-system-implementation-component-uuid" target="component/link[@rel='depends-on']">
            <key-field target="@href"/>
         </index-has-key>
         
         <!-- References to components of @type="validation" -->
         <index name="index-system-implementation-component-uuid-validation" target="component[@type='validation']">
            <key-field target="@uuid"/>
         </index>
         <index-has-key name="index-system-implementation-component-uuid-validation" target="component/link[@rel='validated-by']">
            <key-field target="@href"/>
         </index-has-key>
         <index-has-key name="index-system-implementation-component-uuid-validation" target="component/link[@rel='proof-of-compliance']">
            <key-field target="@href"/>
         </index-has-key>
         
         <!-- References to components of @type="service" -->
         <index name="index-system-implementation-component-uuid-service" target="component[@type='service']">
            <key-field target="@uuid"/>
         </index>
         <index-has-key name="index-system-implementation-component-uuid-service" target="component/link[@rel='uses-service']">
            <key-field target="@href"/>
         </index-has-key>

         <!-- References to components of @type="software" -->
         <index name="index-system-implementation-component-uuid-software" target="component[@type='service']">
            <key-field target="@uuid"/>
         </index>
         <index-has-key name="index-system-implementation-component-uuid-software" target="component[@type='service']/link[@rel='provided-by']">
            <key-field target="@href"/>
         </index-has-key>
      </constraint>
   </define-assembly>

   <define-assembly name="system-inventory">
      <formal-name>System Inventory</formal-name>
      <description>A set of <code>inventory-item</code> entries that represent the managed inventory instances of the system.</description>
      <model>
         <assembly ref="inventory-item" min-occurs="1" max-occurs="unbounded">
            <group-as name="inventory-items" in-json="BY_KEY"/>
         </assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
   </define-assembly>

   <define-assembly name="control-implementation">
      <formal-name>Control Implementation</formal-name>
      <description>Describes how the system satisfies a set of controls.</description>
      <model>
         <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
            <formal-name>Control Implementation Description</formal-name>
            <description>A statement describing important things to know about how this set of control satisfaction documentation is approached.</description>
         </define-field>
         <assembly ref="implemented-requirement" min-occurs="1" max-occurs="unbounded">
            <group-as name="implemented-requirements" in-json="ARRAY"/>
         </assembly>
      </model>
   </define-assembly>
   <define-assembly name="implemented-requirement">
      <formal-name>Control-based Requirement</formal-name>
      <description>Describes how the system satisfies an individual control.</description>
      <define-flag name="uuid" as-type="uuid" required="yes">
         <formal-name>Control Requirement Universally Unique Identifier</formal-name>
         <description>A globally unique identifier that can be used to reference this control requirement entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
      </define-flag>
      <flag ref="control-id" required="yes"/>
      <model>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
            <!-- TODO: Model specific characteristic names -->
            <!-- TODO: add: status -->
            <!-- TODO: add: control-implementation -->
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
            <!-- TODO: Model specific link relationships -->
         </assembly>
         <assembly ref="by-component" max-occurs="unbounded">
            <group-as name="by-components" in-json="BY_KEY"/>
         </assembly>
         <!--
         <assembly ref="by-capability" max-occurs="unbounded">
            <group-as name="by-capabilities" in-json="BY_KEY"/>
         </assembly>
-->
         <assembly ref="responsible-role" max-occurs="unbounded">
            <!-- QUESTION: Should responsible-role and set-parameter only appear on the by-component? -->
            <group-as name="responsible-roles" in-json="BY_KEY"/>
         </assembly>
         <assembly ref="set-parameter" max-occurs="unbounded">
            <!-- QUESTION: Should responsible-role and set-parameter only appear on the by-component? -->
            <group-as name="parameter-settings" in-json="BY_KEY"/>
         </assembly>
         <assembly ref="statement" max-occurs="unbounded">
            <group-as name="statements" in-json="BY_KEY"/>
         </assembly>
         <!--            <assembly ref="using"/>
-->
         <!-- TODO: Implement parameters -->
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
      <constraint>
         <allowed-values target="responsible-role/@role-id" allow-other="yes">
            &allowed-values-responsible-roles-operations;
         </allowed-values>
         <index-has-key name="index-metadata-role-id" target="responsible-role|statement/responsible-role|.//by-component//responsible-role">
            <key-field target="@role-id"></key-field>
         </index-has-key>
         <index-has-key name="index-metadata-party-uuid" target="responsible-role|statement/responsible-role|.//by-component//responsible-role">
            <key-field target="@party-uuid"></key-field>
         </index-has-key>
         <!-- TODO: Make sure at least one by-component is used at the control or statement level -->
      </constraint>
   </define-assembly>
   <define-assembly name="statement">
      <formal-name>Specific Control Statement</formal-name>
      <description>Identifies which statements within a control are addressed.</description>
      <json-key flag-name="statement-id"/>
      <flag ref="statement-id" required="yes">
         <remarks>
            <p>A reference to the specific implemented statement associated with a control.</p>
         </remarks>
      </flag>
      <define-flag name="uuid" as-type="uuid" required="yes">
         <formal-name>Control Statement Reference Universally Unique Identifier</formal-name>
         <description>A globally unique identifier that can be used to reference this control statement entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
      </define-flag>
      <model>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
            <!-- TODO: Model specific link relationships -->
         </assembly>
         <!--            <assembly ref="using"/>
-->
         <!-- TODO: Implement parameters -->
         <assembly ref="responsible-role" max-occurs="unbounded">
            <!-- QUESTION: Should responsible-role and set-parameter only appear on the by-component? -->
            <group-as name="responsible-roles" in-json="BY_KEY"/>
         </assembly>
         <assembly ref="by-component" max-occurs="unbounded">
            <group-as name="by-components" in-json="BY_KEY"/>
         </assembly>
         <!--         <assembly ref="by-capability" max-occurs="unbounded">
            <group-as name="by-capabilities" in-json="BY_KEY"/>
         </assembly>
-->
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
      <constraint>
         <allowed-values target="responsible-role/@role-id" allow-other="yes">
            &allowed-values-responsible-roles-operations;
         </allowed-values>
      </constraint>
   </define-assembly>
   <define-assembly name="by-component">
      <formal-name>Component Control Implementation</formal-name>
      <description>Defines how the referenced component implements a set of controls.</description>
      <json-key flag-name="component-uuid"/>
      <define-flag required="yes" name="component-uuid" as-type="uuid">
         <formal-name>Component Universally Unique Identifier Reference</formal-name>
         <description>A reference to the component that is implementing a given control or control statement.</description>
      </define-flag>
      <define-flag name="uuid" as-type="uuid" required="yes">
         <formal-name>By-Component Universally Unique Identifier</formal-name>
         <description>A globally unique identifier that can be used to reference this by-component entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
      </define-flag>
      <model>
         <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
            <formal-name>Control Implementation Description</formal-name>
            <description>An implementation statement that describes how a control or a control statement is implemented within the referenced system component.</description>
         </define-field>
         <field ref="property" max-occurs="unbounded">
            <use-name>prop</use-name>
            <group-as name="properties" in-json="ARRAY"/>
         </field>
         <assembly ref="annotation" max-occurs="unbounded">
            <group-as name="annotations" in-json="ARRAY"/>
         </assembly>
         <assembly ref="link" max-occurs="unbounded">
            <group-as name="links" in-json="ARRAY"/>
            <!-- TODO: Model specific link relationships -->
         </assembly>
         <define-assembly name="export" max-occurs="1">
            <formal-name>Export</formal-name>
            <description>Identifies content intended for external consumption, such as with leveraged organizations.</description>
            <model>
               <define-field name="description" as-type="markup-multiline" in-xml="WITH_WRAPPER">
                  <formal-name>Control Implementation Export Description</formal-name>
                  <description>An implementation statement that describes the aspects of the control or control statement implementation that can be available to another system leveraging this system.</description>
               </define-field>
               <field ref="property" max-occurs="unbounded">
                  <use-name>prop</use-name>
                  <group-as name="properties" in-json="ARRAY"/>
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
                  <!-- TODO: Model specific link relationships -->
               </assembly>
               <define-assembly name="provided" max-occurs="unbounded">
                  <formal-name>Provided Control Implementation</formal-name>
                  <description>Describes a capability which may be inherited by a leveraging system.</description>
                  <group-as name="provided-group" in-json="ARRAY"/>
                  <define-flag name="uuid" as-type="uuid" required="yes">
                     <formal-name>Provided Universally Unique Identifier</formal-name>
                     <description>A globally unique identifier that can be used to reference this provided entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
                  </define-flag>
                  <model>
                     <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
                        <formal-name>Provided Control Implementation Description</formal-name>
                        <description>An implementation statement that describes the aspects of the control or control statement implementation that can be provided to another system leveraging this system.</description>
                     </define-field>
                     <field ref="property" max-occurs="unbounded">
                        <use-name>prop</use-name>
                        <group-as name="properties" in-json="ARRAY"/>
                     </field>
                     <assembly ref="annotation" max-occurs="unbounded">
                        <group-as name="annotations" in-json="ARRAY"/>
                     </assembly>
                     <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                        <!-- TODO: Model specific link relationships -->
                     </assembly>
                     <assembly ref="responsible-role" min-occurs="0" max-occurs="unbounded">
                        <group-as name="responsible-roles" in-json="BY_KEY"/>
                     </assembly>
                     <field ref="remarks" in-xml="WITH_WRAPPER"/>
                  </model>
               </define-assembly>
               <define-assembly name="responsibility" max-occurs="unbounded">
                  <formal-name>Control Implementation Responsibility</formal-name>
                  <description>Describes a control implementation responsibiity imposed on a leveraging system.</description>
                  <group-as name="responsibilities" in-json="ARRAY"/>
                  <define-flag name="uuid" as-type="uuid" required="yes">
                     <formal-name>Responsibility Universally Unique Identifier</formal-name>
                     <description>A globally unique identifier that can be used to reference this responsibility entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
                  </define-flag>
                  <flag ref="provided-uuid" required="no" />
                  <model>
                     <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
                        <formal-name>Control Implementation Responsibility Description</formal-name>
                        <description>An implementation statement that describes the aspects of the control or control statement implementation that a leveraging system must implement to satisfy the control provided by a leveraged system.</description>
                     </define-field>
                     <field ref="property" max-occurs="unbounded">
                        <use-name>prop</use-name>
                        <group-as name="properties" in-json="ARRAY"/>
                     </field>
                     <assembly ref="annotation" max-occurs="unbounded">
                        <group-as name="annotations" in-json="ARRAY"/>
                     </assembly>
                     <assembly ref="link" max-occurs="unbounded">
                        <group-as name="links" in-json="ARRAY"/>
                        <!-- TODO: Model specific link relationships -->
                     </assembly>
                     <assembly ref="responsible-role" min-occurs="0" max-occurs="unbounded">
                        <group-as name="responsible-roles" in-json="BY_KEY"/>
                     </assembly>
                     <field ref="remarks" in-xml="WITH_WRAPPER"/>
                  </model>
               </define-assembly>
               <field ref="remarks" in-xml="WITH_WRAPPER"/>
            </model>
            <constraint>
               <has-cardinality target="provided|responsibility" min-occurs="1"/>
               <index name="by-component-export-provided-uuid" target="">
                  <key-field target="@uuid"/>
               </index>
               <index-has-key name="by-component-export-provided-uuid" target="responsibility">
                  <key-field target="@provided-uuid"/>
               </index-has-key>
            </constraint>
         </define-assembly>
         <define-assembly name="inherited" max-occurs="unbounded">
            <formal-name>Inherited Control Implementation</formal-name>
            <description>Describes a control implementation inherited by a leveraging system.</description>
            <group-as name="inherited-group" in-json="ARRAY"/>
            <define-flag name="uuid" as-type="uuid" required="yes">
               <formal-name>Inherited Universally Unique Identifier</formal-name>
               <description>A globally unique identifier that can be used to reference this inherited entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
            </define-flag>
            <flag ref="provided-uuid" required="no" />
            <model>
               <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
                  <formal-name>Inherited Control Implementation Description</formal-name>
                  <description>An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is inheriting from a leveraged system.</description>
               </define-field>
               <field ref="property" max-occurs="unbounded">
                  <use-name>prop</use-name>
                  <group-as name="properties" in-json="ARRAY"/>
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
                  <!-- TODO: Model specific link relationships -->
               </assembly>
               <assembly ref="responsible-role" min-occurs="0" max-occurs="unbounded">
                  <group-as name="responsible-roles" in-json="BY_KEY"/>
               </assembly>
            </model>
         </define-assembly>
         <define-assembly name="satisfied" max-occurs="unbounded">
            <formal-name>Satisfied Control Implementation Responsibility</formal-name>
            <description>Describes how this system satisfies a responsibiity imposed by a leveraged system.</description>
            <group-as name="satisfied-group" in-json="ARRAY"/>
            <define-flag name="uuid" as-type="uuid" required="yes">
               <formal-name>Satisfied Universally Unique Identifier</formal-name>
               <description>A globally unique identifier that can be used to reference this satisfied entry elsewhere in an OSCAL document. A UUID should be consistantly used for a given resource across revisions of the document.</description>
            </define-flag>
            <flag ref="responsibility-uuid" required="no" />
            <model>
               <define-field name="description" as-type="markup-multiline" min-occurs="1" in-xml="WITH_WRAPPER">
                  <formal-name>Satisfied Control Implementation Responsibility Description</formal-name>
                  <description>An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is implementing based on a requirement from a leveraged system.</description>
               </define-field>
               <field ref="property" max-occurs="unbounded">
                  <use-name>prop</use-name>
                  <group-as name="properties" in-json="ARRAY"/>
               </field>
               <assembly ref="annotation" max-occurs="unbounded">
                  <group-as name="annotations" in-json="ARRAY"/>
               </assembly>
               <assembly ref="link" max-occurs="unbounded">
                  <group-as name="links" in-json="ARRAY"/>
                  <!-- TODO: Model specific link relationships -->
               </assembly>
               <assembly ref="responsible-role" min-occurs="0" max-occurs="unbounded">
                  <group-as name="responsible-roles" in-json="BY_KEY"/>
               </assembly>
               <field ref="remarks" in-xml="WITH_WRAPPER"/>
            </model>
         </define-assembly>
         <assembly ref="responsible-role" max-occurs="unbounded">
            <group-as name="responsible-roles" in-json="BY_KEY"/>
         </assembly>
         <assembly ref="set-parameter" max-occurs="unbounded">
            <!-- QUESTION: Is this defined in the correct order? -->
            <group-as name="parameter-settings" in-json="BY_KEY"/>
         </assembly>
         <field ref="remarks" in-xml="WITH_WRAPPER"/>
      </model>
      <constraint>
         <allowed-values target=".//responsible-role/@role-id" allow-other="yes">
            &allowed-values-responsible-roles-operations;
            &allowed-values-responsible-roles-component-production;
         </allowed-values>
      </constraint>
   </define-assembly>

   <define-flag name="provided-uuid" scope="local">
      <formal-name>Provided UUID</formal-name>
      <description>Identifies a 'provided' assembly associated with this assembly.</description>
   </define-flag>
   
   <define-flag name="responsibility-uuid" scope="local">
      <formal-name>Provided UUID</formal-name>
      <description>Identifies a 'provided' assembly associated with this assembly.</description>
   </define-flag>
</METASCHEMA>
